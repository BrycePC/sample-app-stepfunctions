name: ci-buildanddeploy-manual
run-name: ci-buildanddeploy-manual- ${{ github.event.inputs.environment }} - ${{ github.ref_name }}-${{ github.sha }}

on:
  workflow_dispatch:
    environment:
      type: choice
      description: 'Environment: [ volatile | dev | uat | beta ]'
      required: true
      options:
        - sand
        - dev

env:
  awsaccount_tools: '905618979966'
  awsaccount_target: '887977420079'
  environment: ${{ github.event.inputs.environment }}
  app_name: sample-app-stepfunctions
  stack_name: sample-app-stepfunctions-sand
  system: sample

jobs:
  sam_deploy:
    environment: ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    env:
      working-directory: ./
    steps:
      - name: EnvVars
        run: |
          echo "Deploying to target environment: ${{env.environment}}, account ${{env.awsaccount_target}}"
      - name: Checkout.
        uses: actions/checkout@v3

      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
          role-duration-seconds: 1200
          role-to-assume: arn:aws:iam::${{env.awsaccount_target}}:role/tbs-ci
      # Build inside Docker containers
      - run: sam build --use-container
      - run: |
          echo Running against environment: ${{env.environment}}, account: ${{env.awsaccount_target}}
          sam deploy --template-file ./.aws-sam/build/template.yaml --stack-name ${{env.stack_name}} \
            --role-arn "arn:aws:iam::${{env.awsaccount_target}}:role/tbs-cfnexec-ci" \
            --s3-bucket devops-ap-southeast-2-905618979966-deploy --s3-prefix volatile/sam/${{env.stack_name}} \
            --capabilities CAPABILITY_IAM --region ap-southeast-2 --no-fail-on-empty-changeset \
            --tags stackname=${{env.stack_name}} environment=${{env.environment}} system=${{env.system}}